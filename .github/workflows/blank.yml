name: Store GitHub Files in Neon

on:
  workflow_dispatch: # manual trigger
  push:
    branches: [ main ]

jobs:
  upload-files:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client jq curl

      - name: Fetch files from GitHub API and insert into Neon
        run: |
          DATABASE_URL="postgresql://admin:npg_RJV2Sn6BHwPC@ep-wild-haze-adg6n675-pooler.c-2.us-east-1.aws.neon.tech/sfolder1?channel_binding=require&sslmode=require"
          API="https://api.github.com/repos/Hupa11/pakaya/contents/session_2"

          # Make sure table exists
          psql "$DATABASE_URL" -c "CREATE TABLE IF NOT EXISTS files (
            id BIGINT PRIMARY KEY,
            filename TEXT UNIQUE,
            filecontent TEXT
          );"

          # Ensure id column is BIGINT
          psql "$DATABASE_URL" -c "ALTER TABLE files ALTER COLUMN id TYPE BIGINT;"

          # Fetch files list and insert into DB
          curl -s "$API" | jq -r '.[] | select(.type=="file") | [.name, .download_url] | @tsv' | while IFS=$'\t' read -r filename download_url; do
            echo "Fetching $filename from $download_url"

            # Fetch file content and encode to base64
            content=$(curl -s "$download_url" | base64 -w 0)

            # Extract numeric id from filename creds_XXXXX.json
            id=$(echo "$filename" | sed -E 's/creds_([0-9]+)\.json/\1/')

            echo "Storing $filename (id=$id) into DB"

            # Insert into Neon
            psql "$DATABASE_URL" -c \
              "INSERT INTO files (id, filename, filecontent)
               VALUES ($id, '$filename', '$content')
               ON CONFLICT (id) DO UPDATE
               SET filename = EXCLUDED.filename,
                   filecontent = EXCLUDED.filecontent;"
          done
